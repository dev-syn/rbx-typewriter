[{"title":"TypeWriter","type":0,"sectionRef":"#","url":"/rbx-typewriter/api/TypeWriter","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#properties","content":" "},{"title":"WriterStates​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#WriterStates","content":"enum-like &lt;/&gt; TypeWriter.WriterStates: IWriterStates This is an enum-like table containing the TypeWriter's last running state.  "},{"title":"ClassName​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#ClassName","content":"&lt;/&gt; TypeWriter.ClassName: &quot;TypeWriter&quot; The ClassName of this class.  "},{"title":"SFXEnabled​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#SFXEnabled","content":"&lt;/&gt; TypeWriter.SFXEnabled: boolean Whether the TypeWriter type SFX is enabled or not. Defaults to true.  "},{"title":"Content​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Content","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; TypeWriter.Content: string The content that will be typed through the TypeWriter. warning This is intended to be read-only if you wish to change the content use TypeWriter:SetContent.  "},{"title":"TargetElement​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#TargetElement","content":"&lt;/&gt; TypeWriter.TargetElement: TextLabel?  The TextLabel Instance that the TypeWriter will feed letters to.  "},{"title":"TypeInterval​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#TypeInterval","content":"&lt;/&gt; TypeWriter.TypeInterval: number The interval at which letters are typed. Defaults to (0.1, 1/10 of a second).  "},{"title":"Finished​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Finished","content":"event &lt;/&gt; TypeWriter.Finished: GoodSignal This event is fired when the TypeWriter has finished processing the content.  "},{"title":"Skipped​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Skipped","content":"event &lt;/&gt; TypeWriter.Skipped: GoodSignal This event is fired when the TypeWriter processing effect is skipped.  "},{"title":"Stopped​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Stopped","content":"event &lt;/&gt; TypeWriter.Stopped: GoodSignal This event is fired when the TypeWriter has stopped because of abnormal reasons. "},{"title":"Functions​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#functions","content":" "},{"title":"GetDefaultSoundID​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#GetDefaultSoundID","content":"&lt;/&gt; TypeWriter.GetDefaultSoundID() → string Gets the default TypeWriter type sound effect.  "},{"title":"SetSoundID​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#SetSoundID","content":"&lt;/&gt; TypeWriter.SetSoundID(id: string) → () Sets the Sound.SoundId of the 'TypeSound' Sound Instance to the given id.  "},{"title":"new​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#new","content":"&lt;/&gt; TypeWriter.new( content: string-- The string content that the TypeWriter will process. ) → TypeWriter Creates a new TypeWriter object.  "},{"title":"SetContent​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#SetContent","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; TypeWriter:SetContent( content: string-- The new content to update to the TypeWriter. ) → () Sets the content of the TypeWriter safely preventing old content from overlapping with new content. info This method does yield because of an internal TypeWriter:StopSync() call.  "},{"title":"Write​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Write","content":"&lt;/&gt; TypeWriter:Write() → () Starts the TypeWriter which will start processing the content.  "},{"title":"Skip​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Skip","content":"&lt;/&gt; TypeWriter:Skip() → () Skips the TypeWriter content processing displaying all content immediately. caution When using this async function, you must be aware that if you are to skip the TypeWriter processing you must make sure you don't call TypeWriter:Write() until the TypeWriter.Skipped event is called or that duration between the next write is greater than the TypeWriter.TypeInterval.  "},{"title":"SkipSync​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#SkipSync","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; TypeWriter:SkipSync() → () Skips the TypeWriter content processing displaying all content immediately. note This method yields until the TypeWriter's thread has yielded.  "},{"title":"Stop​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Stop","content":"&lt;/&gt; TypeWriter:Stop() → () Stops the TypeWriter haulting it's thread. info This method will shortly yield until the thread is haulted caution When using this async function, you must be aware that if you are to stop the TypeWriter processing you must make sure you don't call TypeWriter:Write() until the TypeWriter.Stopped event is called or that duration between the next write is greater than the TypeWriter.TypeInterval.  "},{"title":"StopSync​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#StopSync","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; TypeWriter:StopSync() → () Stops the TypeWriter haulting it's thread. info This method will shortly yield until the thread is haulted tip If you want to stop the TypeWriter permanently without yielding you can use TypeWriter:Destroy()  "},{"title":"Destroy​","type":1,"pageTitle":"TypeWriter","url":"/rbx-typewriter/api/TypeWriter#Destroy","content":"&lt;/&gt; TypeWriter:Destroy() → () Destroys the TypeWriter cleaning up resources. caution When you are finished with the TypeWriter, remember to call TypeWriter:Destroy(). "}]